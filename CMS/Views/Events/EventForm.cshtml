@model CMS.ViewModels.EventFormViewModel

@{
    ViewBag.Title = Model.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="createOne">
    <h2>@Model.Title</h2>
    <div class="formStyle">
        @using (Html.BeginForm("Save", "Events"))
        {
            @Html.ValidationSummary(true, "Please fix the following errors.", new { @class = "text-warning" })
            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(m => m.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Details, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(m => m.Details, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.Details, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(m => m.Priority, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.Priority, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(m => m.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.StartTime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(m => m.EndTime, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.EndTime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.LocationId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.LocationId, new SelectList(Model.Locations, "LocationId", "Name"), "", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.LocationId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.OrganiserId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.OrganiserId, new SelectList(Model.Organisers, "OrganiserId", "DisplayName"), "", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.OrganiserId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.EventCategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.EventCategoryId, new SelectList(Model.EventCategories, "EventCategoryId", "Name"), "", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.EventCategoryId, "", new { @class = "text-danger" })
                    </div>
                </div>

                @Html.HiddenFor(m => m.EventId)
                @Html.AntiForgeryToken()
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="submit" class="btn btn-primary">Save</button>
                        @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-primary" })
                    </div>
                </div>
            </div>
        }
    </div>
</div>
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}
